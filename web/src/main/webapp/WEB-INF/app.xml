<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd">
			
	<!-- 
		This file is automatically assigned to and used by the org.springframework.web.servlet.DispatcherServlet
		defined in web.xml the same way as any other servlet definition. The only difference is that the dispatcher 
		servlet is initialized with a contextConfigLocation parameter that points to this file.
	-->

	<!-- 
		The following two lines tells Spring to look for all classes in the specified base package, 
		and configure them based on their class and method annotations. The annotation driven system
		makes it simple and easy to configure end-points in controllers (annotate methods with RequestMapping).
	-->
	<context:component-scan base-package="com.owera.xaps.web.app" />
	<mvc:annotation-driven />
	
	<!-- 
		The following configures a view resolver for Spring MVC
		that is based on FreeMarker templates. If this is not defined, JSP is used per default.
		This configuration uses the same template path set by the Freemarker class in the util package in xAPS Web-	
	-->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/templates"/>
    </bean>
    <bean id="viewResolver" class="com.owera.xaps.web.app.util.ViewResolver">
        <property name="suffix" value=".ftl" />
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>
</beans>